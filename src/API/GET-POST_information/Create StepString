
POST  -  "https://stepik.org/api/step-sources"

{
    "stepSource": {
        "reason_of_failure": null,
        "instruction_id": null,
        "has_instruction": false,
        "cost": 1,
        "is_solutions_unlocked": false,
        "solutions_unlocked_attempts": 3,
        "max_submissions_count": 3,
        "has_submissions_restrictions": true,
        "create_date": null,
        "block": {
            "text": "<p>Text of text question</p>",
            "name": "string",
            "video": null,
            "options": null,
            "source": {
                "pattern": "answer answer answer",
                "use_re": true,
                "match_substring": true,
                "case_sensitive": true,
                "code": "# def check(reply):\n#     \"\"\"Evaluate the learner's reply.\n#\n#     It should return 1 or True for the correct reply and 0 or False\n#     for the incorrect one.\n#\n#     A partial solution may be scored using a float number from the\n#     interval (0, 1). In such a case the learner total score for the\n#     problem will be 'step cost' * 'score'.\n#\n#     :param reply: a string that is the learner's reply to the problem\n#     :return: a score number (int or float) in range [0, 1]\n#\n#     \"\"\"\n#     return reply == \"Hello\"\n\n# def solve():\n#     \"\"\"Return a correct reply. This function is *optional*.\n#\n#     It is used to test the correctness of the 'check' function.\n#\n#     :return: a string that is a correct reply to the problem\n#\n#     \"\"\"\n#     return \"Hello\"",
                "is_text_disabled": false,
                "is_file_disabled": true
            },
            "feedback_correct": "My comma",
            "feedback_wrong": "My comma to wrong"
        },
        "instruction_type": null,
        "lesson_id": null,
        "position": 3,
        "status": "ready",
        "is_enabled": true,
        "needs_plan": null,
        "instruction": null,
        "lesson": "1310745"
    }
}